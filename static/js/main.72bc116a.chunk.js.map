{"version":3,"sources":["components/ProductItem/ProductItem.js","components/Cart/Cart.styles.js","components/CartItem/CartItem.js","components/CartCategory/CartCategory.styles.js","components/CartCategory/CartCategory.js","components/Cart/Cart.js","helpers/index.js","App.styles.js","App.js","index.js"],"names":["ProductItem","productCategory","product","addButton","ListItem","ListItemText","primary","name","secondary","price","Button","variant","color","onClick","category","Divider","component","Wrapper","styled","div","CartItem","products","addToCart","removeFromCart","map","className","amount","size","disableElevation","id","section","CartCategory","Cart","key","cartItems","closeButton","productGroupedByCategory","reduce","result","currentValue","push","IconButton","length","Object","entries","categoryData","acc","StyledCircularProgress","CircularProgress","StyledButton","StyledList","List","CategorySection","CategoryText","header","getProducts","a","fetch","headers","Accept","json","theme","createMuiTheme","palette","main","App","items","useState","cartOpen","setCartOpen","setCartItems","useQuery","data","error","isLoading","isError","handleAddToCart","clickedItem","prev","find","item","message","ThemeProvider","CssBaseline","Typography","Drawer","anchor","open","onClose","style","position","Badge","badgeContent","total","Grid","container","xs","description","Paper","content","client","QueryClient","ReactDOM","render","QueryClientProvider","document","getElementById"],"mappings":"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","file":"static/js/main.72bc116a.chunk.js","sourcesContent":["import Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\n\nconst ProductItem = ({ productCategory, product, addButton }) => {\n  return (\n    <>\n      <ListItem>\n        <ListItemText\n          primary={product.name}\n          secondary={`${product.price} zł`}\n        />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() =>\n            addButton({\n              ...product,\n              category: productCategory,\n            })\n          }\n        >\n          <AddIcon />\n        </Button>\n      </ListItem>\n      <Divider component=\"li\" />\n    </>\n  );\n};\n\nexport default ProductItem;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 20px;\n  width: 100vw;\n  max-width: 500px;\n\n  div {\n    flex: 1;\n  }\n\n  .information,\n  .buttons {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  img {\n    max-width: 80px;\n    object-fit: cover;\n    margin-left: 40px;\n  }\n`;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nconst CartItem = ({ products, addToCart, removeFromCart }) => {\n  return products.map((product) => (\n    <li key={product.id}>\n      <div>\n        <h4>{product.name}</h4>\n        <div className=\"information\">\n          <p>Cena: {product.price} zł</p>\n          <p>Cena w sumie: {product.amount * product.price} zł</p>\n        </div>\n        <div className=\"buttons\">\n          <Button\n            size=\"small\"\n            disableElevation\n            variant=\"contained\"\n            onClick={() => removeFromCart(product.id)}\n          >\n            -\n          </Button>\n          <p>{product.amount}</p>\n          <Button\n            size=\"small\"\n            disableElevation\n            variant=\"contained\"\n            onClick={() => addToCart(product)}\n          >\n            +\n          </Button>\n        </div>\n      </div>\n    </li>\n  ));\n};\n\nexport default CartItem;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.section`\n  border-bottom: 1px solid black;\n`;\n","import React from 'react';\nimport CartItem from '../CartItem/CartItem';\nimport { Wrapper } from './CartCategory.styles';\n\nconst CartCategory = ({ category, products, addToCart, removeFromCart }) => {\n  return (\n    <Wrapper>\n      <h3>{category}</h3>\n      <ul>\n        <CartItem\n          products={products}\n          addToCart={addToCart}\n          removeFromCart={removeFromCart}\n        />\n      </ul>\n    </Wrapper>\n  );\n};\n\nexport default CartCategory;\n","import React from 'react';\nimport { Wrapper } from './Cart.styles';\nimport CartCategory from '../CartCategory/CartCategory';\nimport { groupBy } from '../../helpers';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nconst Cart = ({ cartItems, addToCart, removeFromCart, closeButton }) => {\n  const productGroupedByCategory = groupBy(cartItems, 'category');\n\n  const calculateTotalPrice = (product) =>\n    product.reduce((acc, product) => acc + product.amount * product.price, 0);\n\n  return (\n    <Wrapper>\n      <div>\n        <IconButton onClick={closeButton}>\n          <ChevronRightIcon />\n        </IconButton>\n        <h2>Zamówienie cateringowe</h2>\n        {cartItems.length === 0 ? <p>Brak produktów w zamówieniu</p> : null}\n        {Object.entries(productGroupedByCategory)?.map(\n          ([category, categoryData]) => (\n            <CartCategory\n              key={category}\n              category={category}\n              products={categoryData}\n              addToCart={addToCart}\n              removeFromCart={removeFromCart}\n            />\n          )\n        )}\n        <p>\n          <strong>Cena za catering: {calculateTotalPrice(cartItems)} zł</strong>\n        </p>\n      </div>\n    </Wrapper>\n  );\n};\n\nexport default Cart;\n","export const groupBy = (array, key) => {\n  // Return the end result\n  return array.reduce((result, currentValue) => {\n    // If an array already present for key, push it to the array. Else create an array and push the object\n    (result[currentValue[key]] = result[currentValue[key]] || []).push(\n      currentValue\n    );\n    // Return the current iteration `result` value, this will be taken as next iteration `result` value and accumulate\n    return result;\n  }, {}); // empty object is the initial value for result object\n};\n","import styled from 'styled-components';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\n\nexport const StyledCircularProgress = styled(CircularProgress)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const Wrapper = styled.div`\n  margin: 80px 40px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-family: 'Roboto', sans-serif;\n`;\n\nexport const StyledButton = styled(IconButton)`\n  position: fixed;\n  z-index: 100;\n  right: 20px;\n  top: 20px;\n`;\n\nexport const StyledList = styled(List)`\n  padding: 0 !important;\n  li:last-child {\n    display: none;\n  }\n`;\n\nexport const CategorySection = styled.section`\n  margin-bottom: 20px;\n`;\n\nexport const CategoryText = styled.header`\n  margin-bottom: 10px;\n`;\n","import { useQuery } from 'react-query';\nimport { useState } from 'react';\n\nimport Drawer from '@material-ui/core/Drawer';\nimport Grid from '@material-ui/core/Grid';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport Badge from '@material-ui/core/Badge';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport ProductItem from './components/ProductItem/ProductItem';\nimport Cart from './components/Cart/Cart';\n\nimport {\n  Wrapper,\n  StyledCircularProgress,\n  StyledButton,\n  StyledList,\n  CategorySection,\n  CategoryText,\n} from './App.styles';\n\nimport 'fontsource-roboto';\n\nconst getProducts = async () =>\n  await (\n    await fetch('data.json', {\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n    })\n  ).json();\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#7F8054',\n    },\n    secondary: {\n      main: '#52542C',\n    },\n  },\n});\n\nconst App = () => {\n  const [cartOpen, setCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n  const { data, error, isLoading, isError } = useQuery('products', getProducts);\n\n  const handleAddToCart = (clickedItem) => {\n    setCartItems((prev) => {\n      const isItemInCart = prev.find((item) => item.id === clickedItem.id);\n\n      if (isItemInCart) {\n        return prev.map((item) =>\n          item.id === clickedItem.id\n            ? { ...item, amount: item.amount + 1 }\n            : item\n        );\n      }\n\n      return [...prev, { ...clickedItem, amount: 1 }];\n    });\n  };\n\n  const handleRemoveFromCart = (id) => {\n    setCartItems((prev) =>\n      prev.reduce((acc, item) => {\n        if (item.id === id) {\n          if (item.amount === 1) return acc;\n          return [...acc, { ...item, amount: item.amount - 1 }];\n        } else {\n          return [...acc, item];\n        }\n      }, [])\n    );\n  };\n\n  const getTotalItems = (items) =>\n    items.reduce((total, item) => total + item.amount, 0);\n\n  if (isLoading) {\n    return <StyledCircularProgress />;\n  }\n\n  if (isError) {\n    return <span>Error: {error.message}</span>;\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Wrapper>\n        <Typography variant=\"h2\" color=\"secondary\">\n          Oferta cateringowa\n        </Typography>\n\n        <Drawer\n          anchor=\"right\"\n          open={cartOpen}\n          onClose={() => setCartOpen(false)}\n        >\n          <Cart\n            cartItems={cartItems}\n            addToCart={handleAddToCart}\n            removeFromCart={handleRemoveFromCart}\n            closeButton={() => setCartOpen(false)}\n          />\n        </Drawer>\n\n        <StyledButton\n          style={{\n            position: 'fixed',\n          }}\n          onClick={() => setCartOpen(true)}\n        >\n          <Badge badgeContent={getTotalItems(cartItems)} color=\"error\">\n            <AddShoppingCartIcon color=\"secondary\" />\n          </Badge>\n        </StyledButton>\n\n        <Grid container>\n          <Grid item xs={12}>\n            {data?.map((item) => (\n              <CategorySection key={item.category.name}>\n                <CategoryText>\n                  <Typography variant=\"h4\" component=\"h3\">\n                    {item.category.name}\n                  </Typography>\n                  <Typography variant=\"subtitle2\">\n                    {item.category.description}\n                  </Typography>\n                </CategoryText>\n                <Paper>\n                  <StyledList>\n                    {item.content.map((product) => (\n                      <ProductItem\n                        key={product.id}\n                        productCategory={item.category.name}\n                        product={product}\n                        addButton={handleAddToCart}\n                      />\n                    ))}\n                  </StyledList>\n                </Paper>\n              </CategorySection>\n            ))}\n          </Grid>\n        </Grid>\n      </Wrapper>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nconst client = new QueryClient();\n\nReactDOM.render(\n  <QueryClientProvider client={client}>\n    <App />\n  </QueryClientProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}