{"version":3,"sources":["components/ProductItem/ProductItem.js","components/Cart/Cart.styles.js","components/CartItem/CartItem.js","components/CartCategory/CartCategory.styles.js","components/CartCategory/CartCategory.js","components/Cart/Cart.js","helpers/index.js","App.styles.js","App.js","index.js"],"names":["ProductItem","productCategory","product","addButton","ListItem","ListItemText","primary","name","secondary","price","priceDetails","Button","variant","color","onClick","category","Divider","component","Wrapper","styled","aside","CartItem","products","addToCart","removeFromCart","map","divider","Grid","container","direction","Typography","item","justify","amount","alignItems","IconButton","size","id","section","CartCategory","List","useStyles","makeStyles","icon","height","width","Cart","key","cartItems","closeButton","classes","productGroupedByCategory","reduce","result","currentValue","push","xs","className","length","align","style","marginTop","Object","entries","categoryData","acc","StyledCircularProgress","CircularProgress","div","StyledButton","StyledList","CategorySection","CategoryText","header","getProducts","a","fetch","headers","Accept","json","theme","createMuiTheme","palette","main","App","items","useState","cartOpen","setCartOpen","setCartItems","useQuery","data","error","isLoading","isError","handleAddToCart","clickedItem","prev","find","message","ThemeProvider","CssBaseline","Drawer","anchor","open","onClose","position","Badge","badgeContent","total","description","Paper","content","client","QueryClient","ReactDOM","render","QueryClientProvider","document","getElementById"],"mappings":"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","file":"static/js/main.cb294573.chunk.js","sourcesContent":["import Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\n\nconst ProductItem = ({ productCategory, product, addButton }) => {\n  return (\n    <>\n      <ListItem>\n        <ListItemText\n          primary={product.name}\n          secondary={`${product.price} zł (${product.priceDetails})`}\n        />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() =>\n            addButton({\n              ...product,\n              category: productCategory,\n            })\n          }\n        >\n          <AddIcon />\n        </Button>\n      </ListItem>\n      <Divider component=\"li\" />\n    </>\n  );\n};\n\nexport default ProductItem;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.aside`\n  width: 100vw;\n  max-width: 500px;\n  padding: 20px;\n`;\n","import { Typography, Grid, IconButton, ListItem } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\n\nconst CartItem = ({ products, addToCart, removeFromCart }) => {\n  return products.map((product) => (\n    <ListItem key={product.id} divider>\n      <Grid container direction=\"column\">\n        <Typography variant=\"h6\">{product.name}</Typography>\n        <Grid item>\n          <Grid container direction=\"row\" justify=\"space-between\">\n            <Typography variant=\"overline\">Cena: {product.price} zł</Typography>\n            <Typography variant=\"overline\">\n              Cena w sumie: {product.amount * product.price} zł\n            </Typography>\n          </Grid>\n        </Grid>\n        <Grid item>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n          >\n            <IconButton\n              size=\"medium\"\n              onClick={() => removeFromCart(product.id)}\n            >\n              <RemoveIcon />\n            </IconButton>\n            <Typography variant=\"subtitle1\">{product.amount}</Typography>\n            <IconButton size=\"medium\" onClick={() => addToCart(product)}>\n              <AddIcon />\n            </IconButton>\n          </Grid>\n        </Grid>\n      </Grid>\n    </ListItem>\n  ));\n};\n\nexport default CartItem;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.section`\n  padding-top: 2rem;\n`;\n","import React from 'react';\nimport CartItem from '../CartItem/CartItem';\nimport Typography from '@material-ui/core/Typography';\nimport { Wrapper } from './CartCategory.styles';\nimport List from '@material-ui/core/List';\n\nconst CartCategory = ({ category, products, addToCart, removeFromCart }) => {\n  return (\n    <Wrapper>\n      <Typography variant=\"h5\">{category}</Typography>\n      <List>\n        <CartItem\n          products={products}\n          addToCart={addToCart}\n          removeFromCart={removeFromCart}\n        />\n      </List>\n    </Wrapper>\n  );\n};\n\nexport default CartCategory;\n","import React from 'react';\nimport { Wrapper } from './Cart.styles';\nimport CartCategory from '../CartCategory/CartCategory';\nimport { groupBy } from '../../helpers';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Grid from '@material-ui/core/Grid';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  icon: {\n    height: 35,\n    width: 35,\n  },\n});\n\nconst Cart = ({ cartItems, addToCart, removeFromCart, closeButton }) => {\n  const classes = useStyles();\n  const productGroupedByCategory = groupBy(cartItems, 'category');\n\n  const calculateTotalPrice = (product) =>\n    product.reduce((acc, product) => acc + product.amount * product.price, 0);\n\n  return (\n    <Wrapper>\n      <Grid container justify=\"space-between\" alignItems=\"center\">\n        <Grid item xs={2}>\n          <IconButton onClick={closeButton}>\n            <ChevronRightIcon className={classes.icon} />\n          </IconButton>\n        </Grid>\n        <Grid item xs=\"auto\">\n          <Typography variant=\"h5\" component=\"h3\" color=\"secondary\">\n            Zamówienie cateringowe\n          </Typography>\n        </Grid>\n      </Grid>\n\n      {cartItems.length === 0 ? (\n        <Typography\n          variant=\"h5\"\n          component=\"h3\"\n          color=\"initial\"\n          align=\"center\"\n          style={{ marginTop: '2rem' }}\n        >\n          Brak produktów w zamówieniu\n        </Typography>\n      ) : null}\n      {Object.entries(productGroupedByCategory)?.map(\n        ([category, categoryData]) => (\n          <CartCategory\n            key={category}\n            category={category}\n            products={categoryData}\n            addToCart={addToCart}\n            removeFromCart={removeFromCart}\n          />\n        )\n      )}\n      {cartItems.length > 0 ? (\n        <Typography variant=\"h6\" color=\"initial\" align=\"right\">\n          <strong>Cena za catering: {calculateTotalPrice(cartItems)} zł</strong>\n        </Typography>\n      ) : null}\n    </Wrapper>\n  );\n};\n\nexport default Cart;\n","export const groupBy = (array, key) => {\n  // Return the end result\n  return array.reduce((result, currentValue) => {\n    // If an array already present for key, push it to the array. Else create an array and push the object\n    (result[currentValue[key]] = result[currentValue[key]] || []).push(\n      currentValue\n    );\n    // Return the current iteration `result` value, this will be taken as next iteration `result` value and accumulate\n    return result;\n  }, {}); // empty object is the initial value for result object\n};\n","import styled from 'styled-components';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\n\nexport const StyledCircularProgress = styled(CircularProgress)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const Wrapper = styled.div`\n  margin: 80px 40px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-family: 'Roboto', sans-serif;\n`;\n\nexport const StyledButton = styled(IconButton)`\n  position: fixed;\n  z-index: 100;\n  right: 20px;\n  top: 20px;\n`;\n\nexport const StyledList = styled(List)`\n  padding: 0 !important;\n  li:last-child {\n    display: none;\n  }\n`;\n\nexport const CategorySection = styled.section`\n  margin-bottom: 20px;\n`;\n\nexport const CategoryText = styled.header`\n  margin-bottom: 10px;\n`;\n","import { useQuery } from 'react-query';\nimport { useState } from 'react';\n\nimport Drawer from '@material-ui/core/Drawer';\nimport Grid from '@material-ui/core/Grid';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport Badge from '@material-ui/core/Badge';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport ProductItem from './components/ProductItem/ProductItem';\nimport Cart from './components/Cart/Cart';\n\nimport {\n  Wrapper,\n  StyledCircularProgress,\n  StyledButton,\n  StyledList,\n  CategorySection,\n  CategoryText,\n} from './App.styles';\n\nimport 'fontsource-roboto';\n\nconst getProducts = async () =>\n  await (\n    await fetch('data.json', {\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n    })\n  ).json();\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#7F8054',\n    },\n    secondary: {\n      main: '#52542C',\n    },\n  },\n});\n\nconst App = () => {\n  const [cartOpen, setCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n  const { data, error, isLoading, isError } = useQuery('products', getProducts);\n\n  const handleAddToCart = (clickedItem) => {\n    setCartItems((prev) => {\n      const isItemInCart = prev.find((item) => item.id === clickedItem.id);\n\n      if (isItemInCart) {\n        return prev.map((item) =>\n          item.id === clickedItem.id\n            ? { ...item, amount: item.amount + 1 }\n            : item\n        );\n      }\n\n      return [...prev, { ...clickedItem, amount: 1 }];\n    });\n  };\n\n  const handleRemoveFromCart = (id) => {\n    setCartItems((prev) =>\n      prev.reduce((acc, item) => {\n        if (item.id === id) {\n          if (item.amount === 1) return acc;\n          return [...acc, { ...item, amount: item.amount - 1 }];\n        } else {\n          return [...acc, item];\n        }\n      }, [])\n    );\n  };\n\n  const getTotalItems = (items) =>\n    items.reduce((total, item) => total + item.amount, 0);\n\n  if (isLoading) {\n    return <StyledCircularProgress />;\n  }\n\n  if (isError) {\n    return <span>Error: {error.message}</span>;\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Wrapper>\n        <Typography variant=\"h2\" color=\"secondary\">\n          Oferta cateringowa\n        </Typography>\n\n        <Drawer\n          anchor=\"right\"\n          open={cartOpen}\n          onClose={() => setCartOpen(false)}\n        >\n          <Cart\n            cartItems={cartItems}\n            addToCart={handleAddToCart}\n            removeFromCart={handleRemoveFromCart}\n            closeButton={() => setCartOpen(false)}\n          />\n        </Drawer>\n\n        <StyledButton\n          style={{\n            position: 'fixed',\n          }}\n          onClick={() => setCartOpen(true)}\n        >\n          <Badge badgeContent={getTotalItems(cartItems)} color=\"error\">\n            <AddShoppingCartIcon color=\"secondary\" size=\"medium\" />\n          </Badge>\n        </StyledButton>\n\n        <Grid container>\n          <Grid item xs={12}>\n            {data?.map((item) => (\n              <CategorySection key={item.category.name}>\n                <CategoryText>\n                  <Typography variant=\"h4\" component=\"h3\">\n                    {item.category.name}\n                  </Typography>\n                  <Typography variant=\"subtitle2\">\n                    {item.category.description}\n                  </Typography>\n                </CategoryText>\n                <Paper>\n                  <StyledList>\n                    {item.content.map((product) => (\n                      <ProductItem\n                        key={product.id}\n                        productCategory={item.category.name}\n                        product={product}\n                        addButton={handleAddToCart}\n                      />\n                    ))}\n                  </StyledList>\n                </Paper>\n              </CategorySection>\n            ))}\n          </Grid>\n        </Grid>\n      </Wrapper>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nconst client = new QueryClient();\n\nReactDOM.render(\n  <QueryClientProvider client={client}>\n    <App />\n  </QueryClientProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}